{"ast":null,"code":"var _jsxFileName = \"/Users/sumyat/Documents/GitHub/SupplyChain/client/src/pages/AdminRoles.js\";\nimport React from 'react';\nimport ResponsiveDrawer from \"../components/Navbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useRole } from \"../context/RoleDataContext\";\nimport { useStyles } from \"../components/Styles\";\n\nfunction AdminRoles(props) {\n  const accounts = props.accounts;\n  const supplyChainContract = props.supplyChainContract;\n  const {\n    roles,\n    setRoles\n  } = useRole();\n  const classes = useStyles();\n  const [manufacturerRole, setManufacturerRole] = React.useState(\"\");\n  const [thirdPartyRole, setThirdPartyRole] = React.useState(\"\");\n  const [deliveryRole, setDeliveryRole] = React.useState(\"\");\n  const [customerRole, setCustomerRole] = React.useState(\"\");\n  const navItem = [];\n\n  const handleAddManufacturerAdmin = async () => {\n    await setRoles({ ...roles,\n      manufacturer: manufacturerRole\n    });\n    localStorage.setItem(\"mRole\", manufacturerRole);\n    await supplyChainContract.methods.addManufacturerAdmin(manufacturerRole).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setManufacturerRole(\"\");\n  };\n\n  const handleAddThirdPartyAdmin = async () => {\n    await setRoles({ ...roles,\n      thirdparty: thirdPartyRole\n    });\n    localStorage.setItem(\"tpRole\", thirdPartyRole);\n    await supplyChainContract.methods.addThirdPartyAdmin(thirdPartyRole).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setThirdPartyRole(\"\");\n  };\n\n  const handleAddDeliveryAdmin = async () => {\n    await setRoles({ ...roles,\n      delivery: deliveryRole\n    });\n    localStorage.setItem(\"dRole\", deliveryRole);\n    await supplyChainContract.methods.addDeliveryAdmin(deliveryRole).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setDeliveryRole(\"\");\n  };\n\n  const handleAddCustomerAdmin = async () => {\n    await setRoles({ ...roles,\n      customer: customerRole\n    });\n    localStorage.setItem(\"cRole\", customerRole);\n    await supplyChainContract.methods.addCustomerAdmin(customerRole).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setCustomerRole(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveDrawer, {\n    navItems: navItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.FormWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.pageHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Add Roles\"), console.log(roles), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RoleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"manufacturerRole\",\n    label: \"Enter Manufacturer Address\",\n    variant: \"outlined\",\n    value: manufacturerRole,\n    onChange: e => setManufacturerRole(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddManufacturerAdmin,\n    style: {\n      width: \"30%\",\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Add Manufacturer\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RoleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"thirdPartyRole\",\n    label: \"Enter Third Party Address \",\n    variant: \"outlined\",\n    value: thirdPartyRole,\n    onChange: e => setThirdPartyRole(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddThirdPartyAdmin,\n    style: {\n      width: \"30%\",\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Add Third Party\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RoleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"deliveryRole\",\n    label: \"Enter Delivery Hub Address\",\n    variant: \"outlined\",\n    value: deliveryRole,\n    onChange: e => setDeliveryRole(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddDeliveryAdmin,\n    style: {\n      width: \"30%\",\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"add delivery\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RoleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"customerRole\",\n    label: \" Enter Customer Address\",\n    variant: \"outlined\",\n    value: customerRole,\n    onChange: e => setCustomerRole(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddCustomerAdmin,\n    style: {\n      width: \"30%\",\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"add customer\"))))));\n}\n\nexport default AdminRoles;","map":{"version":3,"sources":["/Users/sumyat/Documents/GitHub/SupplyChain/client/src/pages/AdminRoles.js"],"names":["React","ResponsiveDrawer","TextField","Button","useRole","useStyles","AdminRoles","props","accounts","supplyChainContract","roles","setRoles","classes","manufacturerRole","setManufacturerRole","useState","thirdPartyRole","setThirdPartyRole","deliveryRole","setDeliveryRole","customerRole","setCustomerRole","navItem","handleAddManufacturerAdmin","manufacturer","localStorage","setItem","methods","addManufacturerAdmin","send","from","gas","then","console","log","handleAddThirdPartyAdmin","thirdparty","addThirdPartyAdmin","handleAddDeliveryAdmin","delivery","addDeliveryAdmin","handleAddCustomerAdmin","customer","addCustomerAdmin","FormWrap","pageHeading","root","RoleForm","e","target","value","width","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ResponsiveDrawer from \"../components/Navbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useRole } from \"../context/RoleDataContext\";\nimport { useStyles } from \"../components/Styles\";\n\nfunction AdminRoles(props) {\n  const accounts = props.accounts;\n  const supplyChainContract = props.supplyChainContract;\n  const { roles, setRoles } = useRole();\n\n  const classes = useStyles();\n  const [manufacturerRole, setManufacturerRole] = React.useState(\"\");\n  const [thirdPartyRole, setThirdPartyRole] = React.useState(\"\");\n  const [deliveryRole, setDeliveryRole] = React.useState(\"\");\n  const [customerRole, setCustomerRole] = React.useState(\"\");\n  const navItem = [];\n\n  const handleAddManufacturerAdmin = async () => {\n    await setRoles({\n      ...roles, \n      manufacturer : manufacturerRole\n    })\n\n    localStorage.setItem(\"mRole\", manufacturerRole);\n    await supplyChainContract.methods.addManufacturerAdmin(manufacturerRole).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n    \n\n    setManufacturerRole(\"\");\n  }\n  \n  const handleAddThirdPartyAdmin = async () => {\n    await setRoles({\n      ...roles, \n      thirdparty : thirdPartyRole\n    })\n\n    localStorage.setItem(\"tpRole\", thirdPartyRole);\n    await supplyChainContract.methods.addThirdPartyAdmin(thirdPartyRole).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n    \n\n    setThirdPartyRole(\"\");\n  }\n\n  const handleAddDeliveryAdmin = async () => {\n    await setRoles({\n      ...roles, \n      delivery : deliveryRole\n  })\n\n   localStorage.setItem(\"dRole\", deliveryRole);\n    await supplyChainContract.methods.addDeliveryAdmin(deliveryRole).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n    \n\n    setDeliveryRole(\"\");\n  }\n\n  const handleAddCustomerAdmin = async () => {\n    await setRoles({\n      ...roles, \n    customer : customerRole\n  })\n\n   localStorage.setItem(\"cRole\", customerRole);\n    await supplyChainContract.methods.addCustomerAdmin(customerRole).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n   \n\n    setCustomerRole(\"\");\n  }\n\n\n  return (\n    <div>\n      <ResponsiveDrawer navItems={navItem}>\n      <div className={classes.FormWrap}>\n      <h1 className={classes.pageHeading}>Add Roles</h1>\n      {console.log(roles)}\n      \n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.RoleForm} >\n          <TextField\n            id=\"manufacturerRole\"\n            label=\"Enter Manufacturer Address\"\n            variant=\"outlined\"\n            value={manufacturerRole}\n            onChange={(e) => setManufacturerRole(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddManufacturerAdmin}\n            style={{width:\"30%\", marginLeft:\"10px\"}}\n          >\n            Add Manufacturer\n          </Button>\n        </div>\n      </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.RoleForm} >\n          <TextField\n            id=\"thirdPartyRole\"\n            label=\"Enter Third Party Address \"\n            variant=\"outlined\"\n            value={thirdPartyRole}\n            onChange={(e) => setThirdPartyRole(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddThirdPartyAdmin}\n            style={{width:\"30%\", marginLeft:\"10px\"}}\n          >\n            Add Third Party\n          </Button>\n        </div>\n      </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.RoleForm} >\n          <TextField\n            id=\"deliveryRole\"\n            label=\"Enter Delivery Hub Address\"\n            variant=\"outlined\"\n            value={deliveryRole}\n            onChange={(e) => setDeliveryRole(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddDeliveryAdmin}\n            style={{width:\"30%\", marginLeft:\"10px\"}}\n          >\n            add delivery\n          </Button>\n        </div>\n      </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.RoleForm} >\n          <TextField\n            id=\"customerRole\"\n            label=\" Enter Customer Address\"\n            variant=\"outlined\"\n            value={customerRole}\n            onChange={(e) => setCustomerRole(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddCustomerAdmin}\n            style={{width:\"30%\", marginLeft:\"10px\"}}\n          >\n            add customer\n          </Button>\n        </div>\n      </form>\n      </div>\n      </ResponsiveDrawer>\n    </div>\n  );\n}\n\nexport default AdminRoles;\n"]},"metadata":{},"sourceType":"module"}