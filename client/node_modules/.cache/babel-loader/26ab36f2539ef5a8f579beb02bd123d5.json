{"ast":null,"code":"var _jsxFileName = \"/Users/sumyat/Documents/GitHub/SupplyChain/client/src/pages/Delivery/DeliveryReceive.js\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Button from \"@material-ui/core/Button\";\nimport ProductModal from \"../../components/Modal\";\nimport { useRole } from \"../../context/RoleDataContext\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useStyles } from \"../../components/Styles\";\nimport clsx from \"clsx\";\nimport Loader from \"../../components/Loader\";\nexport default function DeliveryReceive(props) {\n  const supplyChainContract = props.supplyChainContract;\n  const {\n    roles\n  } = useRole();\n  const [count, setCount] = React.useState(0);\n  const [allReceiveProducts, setAllReceiveProducts] = React.useState([]);\n  const [modalData, setModalData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const navItem = [[\"Receive Product\", \"/Delivery/receive\"], [\"Shipping Product\", \"/Delivery/ship\"]];\n  const [alertText, setalertText] = React.useState(\"\");\n  React.useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const cnt = await supplyChainContract.methods.fetchItemCount().call();\n      setCount(cnt);\n    })();\n\n    (async () => {\n      const arr = [];\n\n      for (var i = 1; i < count; i++) {\n        const prodState = await supplyChainContract.methods.fetchItemState(i).call();\n\n        if (prodState === \"5\") {\n          const prodData = [];\n          const a = await supplyChainContract.methods.fetchItemPart1(i, \"product\", 0).call();\n          const b = await supplyChainContract.methods.fetchItemPart2(i, \"product\", 0).call();\n          const c = await supplyChainContract.methods.fetchItemPart3(i, \"product\", 0).call();\n          prodData.push(a);\n          prodData.push(b);\n          prodData.push(c);\n          arr.push(prodData);\n        }\n      }\n\n      setAllReceiveProducts(arr);\n      setLoading(false);\n    })();\n  }, [count]);\n\n  const handleSetTxhash = async (id, hash) => {\n    await supplyChainContract.methods.setTransactionHash(id, hash).send({\n      from: roles.manufacturer,\n      gas: 900000\n    });\n  };\n\n  const handleReceiveButton = async (id, long, lat) => {\n    try {\n      await supplyChainContract.methods.receiveByDelivery(parseInt(id), long, lat).send({\n        from: roles.delivery,\n        gas: 1000000\n      }).on(\"transactionHash\", function (hash) {\n        handleSetTxhash(id, hash);\n      });\n      setCount(0);\n      setOpen(false);\n    } catch {\n      setalertText(\"You are not the owner of the Product\");\n    }\n  };\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleClick = async prod => {\n    await setModalData(prod);\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    classname: classes.pageWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    titlePage: \"Delivery\",\n    navItems: navItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductModal, {\n    prod: modalData,\n    open: open,\n    handleClose: handleClose,\n    handleReceiveButton: handleReceiveButton,\n    aText: alertText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.pageHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Products To be Received\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.tableCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Total Products : \", allReceiveProducts.length), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.TableRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.TableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"Universal ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Product Code\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Manufacturer\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, \"Manufacture Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Product Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: clsx(classes.TableHead, classes.AddressCell),\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: clsx(classes.TableHead),\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"RECEIVE\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, allReceiveProducts.length !== 0 ? allReceiveProducts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(prod => {\n    const d = new Date(parseInt(prod[1][0] * 1000));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: prod[0][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      component: \"th\",\n      align: \"left\",\n      scope: \"row\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 35\n      }\n    }, prod[0][0]), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 35\n      }\n    }, prod[1][2]), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 35\n      }\n    }, prod[0][4]), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 35\n      }\n    }, d.toDateString() + \" \" + d.toTimeString()), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 35\n      }\n    }, prod[1][1]), /*#__PURE__*/React.createElement(TableCell, {\n      className: clsx(classes.TableCell, classes.AddressCell),\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 35\n      }\n    }, prod[0][2]), /*#__PURE__*/React.createElement(TableCell, {\n      className: clsx(classes.TableCell),\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 37\n      }\n    }, \"RECEIVE\"))));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \")))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: allReceiveProducts.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/sumyat/Documents/GitHub/SupplyChain/client/src/pages/Delivery/DeliveryReceive.js"],"names":["React","useState","Navbar","Button","ProductModal","useRole","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","useStyles","clsx","Loader","DeliveryReceive","props","supplyChainContract","roles","count","setCount","allReceiveProducts","setAllReceiveProducts","modalData","setModalData","open","setOpen","classes","loading","setLoading","navItem","alertText","setalertText","useEffect","cnt","methods","fetchItemCount","call","arr","i","prodState","fetchItemState","prodData","a","fetchItemPart1","b","fetchItemPart2","c","fetchItemPart3","push","handleSetTxhash","id","hash","setTransactionHash","send","from","manufacturer","gas","handleReceiveButton","long","lat","receiveByDelivery","parseInt","delivery","on","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleClose","handleClick","prod","pageWrap","pageHeading","tableCount","length","TableRoot","AddressCell","slice","map","d","Date","toDateString","toTimeString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAMC,mBAAmB,GAAGD,KAAK,CAACC,mBAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYf,OAAO,EAAzB;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBtB,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACsB,kBAAD,EAAqBC,qBAArB,IAA8CxB,KAAK,CAACC,QAAN,CAAe,EAAf,CAApD;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM4B,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwB/B,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM+B,OAAO,GAAG,CACd,CAAC,iBAAD,EAAoB,mBAApB,CADc,EAEd,CAAC,kBAAD,EAAqB,gBAArB,CAFc,CAAhB;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACAD,EAAAA,KAAK,CAACmC,SAAN,CAAgB,MAAM;AACpB,KAAC,YAAY;AACXJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMjB,mBAAmB,CAACkB,OAApB,CAA4BC,cAA5B,GAA6CC,IAA7C,EAAlB;AACAjB,MAAAA,QAAQ,CAACc,GAAD,CAAR;AACD,KAJD;;AAMA,KAAC,YAAY;AACX,YAAMI,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,KAApB,EAA2BoB,CAAC,EAA5B,EAAgC;AAC9B,cAAMC,SAAS,GAAG,MAAMvB,mBAAmB,CAACkB,OAApB,CACrBM,cADqB,CACNF,CADM,EAErBF,IAFqB,EAAxB;;AAIA,YAAIG,SAAS,KAAK,GAAlB,EAAuB;AACrB,gBAAME,QAAQ,GAAG,EAAjB;AACA,gBAAMC,CAAC,GAAG,MAAM1B,mBAAmB,CAACkB,OAApB,CACbS,cADa,CACEL,CADF,EACK,SADL,EACgB,CADhB,EAEbF,IAFa,EAAhB;AAGA,gBAAMQ,CAAC,GAAG,MAAM5B,mBAAmB,CAACkB,OAApB,CACbW,cADa,CACEP,CADF,EACK,SADL,EACgB,CADhB,EAEbF,IAFa,EAAhB;AAGA,gBAAMU,CAAC,GAAG,MAAM9B,mBAAmB,CAACkB,OAApB,CACba,cADa,CACET,CADF,EACK,SADL,EACgB,CADhB,EAEbF,IAFa,EAAhB;AAGAK,UAAAA,QAAQ,CAACO,IAAT,CAAcN,CAAd;AACAD,UAAAA,QAAQ,CAACO,IAAT,CAAcJ,CAAd;AACAH,UAAAA,QAAQ,CAACO,IAAT,CAAcF,CAAd;AACAT,UAAAA,GAAG,CAACW,IAAJ,CAASP,QAAT;AACD;AACF;;AACDpB,MAAAA,qBAAqB,CAACgB,GAAD,CAArB;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KA1BD;AA2BD,GAlCD,EAkCG,CAACV,KAAD,CAlCH;;AAoCA,QAAM+B,eAAe,GAAG,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AAC1C,UAAMnC,mBAAmB,CAACkB,OAApB,CACHkB,kBADG,CACgBF,EADhB,EACoBC,IADpB,EAEHE,IAFG,CAEE;AAAEC,MAAAA,IAAI,EAAErC,KAAK,CAACsC,YAAd;AAA4BC,MAAAA,GAAG,EAAE;AAAjC,KAFF,CAAN;AAGD,GAJD;;AAMA,QAAMC,mBAAmB,GAAG,OAAOP,EAAP,EAAWQ,IAAX,EAAiBC,GAAjB,KAAyB;AACnD,QAAG;AACD,YAAM3C,mBAAmB,CAACkB,OAApB,CACL0B,iBADK,CACaC,QAAQ,CAACX,EAAD,CADrB,EAC2BQ,IAD3B,EACiCC,GADjC,EAELN,IAFK,CAEA;AAAEC,QAAAA,IAAI,EAAErC,KAAK,CAAC6C,QAAd;AAAwBN,QAAAA,GAAG,EAAE;AAA7B,OAFA,EAGLO,EAHK,CAGF,iBAHE,EAGiB,UAAUZ,IAAV,EAAgB;AACrCF,QAAAA,eAAe,CAACC,EAAD,EAAKC,IAAL,CAAf;AACD,OALK,CAAN;AAMDhC,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAM,MAAAA,OAAO,CAAC,KAAD,CAAP;AACA,KATD,CASC,MAAK;AACJM,MAAAA,YAAY,CAAC,sCAAD,CAAZ;AACD;AAEF,GAdD;;AAgBA,QAAM,CAACiC,IAAD,EAAOC,OAAP,IAAkBpE,KAAK,CAACC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACoE,WAAD,EAAcC,cAAd,IAAgCtE,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMsE,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3CL,IAAAA,OAAO,CAACK,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AACzCF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAR,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMS,WAAW,GAAG,MAAMjD,OAAO,CAAC,KAAD,CAAjC;;AAEA,QAAMkD,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClC,UAAMrD,YAAY,CAACqD,IAAD,CAAlB;AAEAnD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACmD,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,UAAnB;AAA+B,IAAA,QAAQ,EAAEhD,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,uDACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEL,SADR;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,WAAW,EAAEkD,WAHf;AAIE,IAAA,mBAAmB,EAAEjB,mBAJvB;AAKE,IAAA,KAAK,EAAE3B,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAI,IAAA,SAAS,EAAEJ,OAAO,CAACoD,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATF,eAUE;AAAI,IAAA,SAAS,EAAEpD,OAAO,CAACqD,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoB3D,kBAAkB,CAAC4D,MADvC,CAVF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEtD,OAAO,CAACuD,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEvD,OAAO,CAACpB,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,kBAAW,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEoB,OAAO,CAACnB,SAA9B;AAAyC,IAAA,KAAK,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEmB,OAAO,CAACnB,SAA9B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEmB,OAAO,CAACnB,SAA9B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEmB,OAAO,CAACnB,SAA9B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAaE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEmB,OAAO,CAACnB,SAA9B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAgBE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEK,IAAI,CACbc,OAAO,CAACnB,SADK,EAEbmB,OAAO,CAACwD,WAFK,CADjB;AAKE,IAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF,eAyBE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEtE,IAAI,CAACc,OAAO,CAACnB,SAAT,CADjB;AAEE,IAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBF,CADF,CADF,eAmCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,kBAAkB,CAAC4D,MAAnB,KAA8B,CAA9B,GACC5D,kBAAkB,CACf+D,KADH,CAEInB,IAAI,GAAGE,WAFX,EAGIF,IAAI,GAAGE,WAAP,GAAqBA,WAHzB,EAKGkB,GALH,CAKQR,IAAD,IAAU;AACb,UAAMS,CAAC,GAAG,IAAIC,IAAJ,CAASzB,QAAQ,CAACe,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAa,IAAd,CAAjB,CAAV;AACA,wBACE,uDACE,oBAAC,QAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,MAAA,GAAG,EAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,SAAD;AACE,MAAA,SAAS,EAAElD,OAAO,CAACrB,SADrB;AAEE,MAAA,SAAS,EAAC,IAFZ;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,KAAK,EAAC,KAJR;AAKE,MAAA,OAAO,EAAE,MAAMsE,WAAW,CAACC,IAAD,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAPH,CANF,eAeE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAElD,OAAO,CAACrB,SADrB;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,MAAMsE,WAAW,CAACC,IAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CALH,CAfF,eAsBE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAElD,OAAO,CAACrB,SADrB;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,MAAMsE,WAAW,CAACC,IAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CALH,CAtBF,eA6BE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,IAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGS,CAAC,CAACE,YAAF,KAAmB,GAAnB,GAAyBF,CAAC,CAACG,YAAF,EAJ5B,CA7BF,eAmCE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAE9D,OAAO,CAACrB,SADrB;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,MAAMsE,WAAW,CAACC,IAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CALH,CAnCF,eA0CE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEhE,IAAI,CACbc,OAAO,CAACrB,SADK,EAEbqB,OAAO,CAACwD,WAFK,CADjB;AAKE,MAAA,KAAK,EAAC,QALR;AAME,MAAA,OAAO,EAAE,MAAMP,WAAW,CAACC,IAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CARH,CA1CF,eAoDE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEhE,IAAI,CAACc,OAAO,CAACrB,SAAT,CADjB;AAEE,MAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAE,MAAMsE,WAAW,CAACC,IAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CApDF,CADF,CADF;AAsED,GA7EH,CADD,gBAgFC,8CAjFJ,CAnCF,CADF,CADF,eA2HE,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAExD,kBAAkB,CAAC4D,MAH5B;AAIE,IAAA,WAAW,EAAEd,WAJf;AAKE,IAAA,IAAI,EAAEF,IALR;AAME,IAAA,YAAY,EAAEI,gBANhB;AAOE,IAAA,mBAAmB,EAAEG,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3HF,CADF,CAdF,CAJJ,CADF,CADF;AAgKD","sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Button from \"@material-ui/core/Button\";\nimport ProductModal from \"../../components/Modal\";\nimport { useRole } from \"../../context/RoleDataContext\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useStyles } from \"../../components/Styles\";\nimport clsx from \"clsx\";\nimport Loader from \"../../components/Loader\";\n\nexport default function DeliveryReceive(props) {\n  const supplyChainContract = props.supplyChainContract;\n  const { roles } = useRole();\n  const [count, setCount] = React.useState(0);\n  const [allReceiveProducts, setAllReceiveProducts] = React.useState([]);\n  const [modalData, setModalData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const navItem = [\n    [\"Receive Product\", \"/Delivery/receive\"],\n    [\"Shipping Product\", \"/Delivery/ship\"],\n  ];\n  const [alertText, setalertText] = React.useState(\"\");\n  React.useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const cnt = await supplyChainContract.methods.fetchItemCount().call();\n      setCount(cnt);\n    })();\n\n    (async () => {\n      const arr = [];\n      for (var i = 1; i < count; i++) {\n        const prodState = await supplyChainContract.methods\n          .fetchItemState(i)\n          .call();\n\n        if (prodState === \"5\") {\n          const prodData = [];\n          const a = await supplyChainContract.methods\n            .fetchItemPart1(i, \"product\", 0)\n            .call();\n          const b = await supplyChainContract.methods\n            .fetchItemPart2(i, \"product\", 0)\n            .call();\n          const c = await supplyChainContract.methods\n            .fetchItemPart3(i, \"product\", 0)\n            .call();\n          prodData.push(a);\n          prodData.push(b);\n          prodData.push(c);\n          arr.push(prodData);\n        }\n      }\n      setAllReceiveProducts(arr);\n      setLoading(false);\n    })();\n  }, [count]);\n\n  const handleSetTxhash = async (id, hash) => {\n    await supplyChainContract.methods\n      .setTransactionHash(id, hash)\n      .send({ from: roles.manufacturer, gas: 900000 });\n  };\n\n  const handleReceiveButton = async (id, long, lat) => {\n    try{\n      await supplyChainContract.methods\n      .receiveByDelivery(parseInt(id), long, lat)\n      .send({ from: roles.delivery, gas: 1000000 })\n      .on(\"transactionHash\", function (hash) {\n        handleSetTxhash(id, hash);\n      });\n     setCount(0);\n     setOpen(false);\n    }catch{\n      setalertText(\"You are not the owner of the Product\");\n    }\n    \n  };\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleClick = async (prod) => {\n    await setModalData(prod);\n    \n    setOpen(true);\n  };\n\n  return (\n    <div classname={classes.pageWrap}>\n      <Navbar titlePage={\"Delivery\"} navItems={navItem}>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <ProductModal\n              prod={modalData}\n              open={open}\n              handleClose={handleClose}\n              handleReceiveButton={handleReceiveButton}\n              aText={alertText}\n            />\n\n            <h1 className={classes.pageHeading}>Products To be Received</h1>\n            <h3 className={classes.tableCount}>\n              Total Products : {allReceiveProducts.length}\n            </h3>\n\n            <div>\n              <Paper className={classes.TableRoot}>\n                <TableContainer className={classes.TableContainer}>\n                  <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.TableHead} align=\"left\">\n                          Universal ID\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Product Code\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Manufacturer\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Manufacture Date\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Product Name\n                        </TableCell>\n                        <TableCell\n                          className={clsx(\n                            classes.TableHead,\n                            classes.AddressCell\n                          )}\n                          align=\"center\"\n                        >\n                          Owner\n                        </TableCell>\n                        <TableCell\n                          className={clsx(classes.TableHead)}\n                          align=\"center\"\n                        >\n                          RECEIVE\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {allReceiveProducts.length !== 0 ? (\n                        allReceiveProducts\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((prod) => {\n                            const d = new Date(parseInt(prod[1][0] * 1000));\n                            return (\n                              <>\n                                <TableRow\n                                  hover\n                                  role=\"checkbox\"\n                                  tabIndex={-1}\n                                  key={prod[0][0]}\n                                >\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    component=\"th\"\n                                    align=\"left\"\n                                    scope=\"row\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[0][0]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[1][2]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[0][4]}\n                                  </TableCell>\n                                  <TableCell\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {d.toDateString() + \" \" + d.toTimeString()}\n                                  </TableCell>\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[1][1]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={clsx(\n                                      classes.TableCell,\n                                      classes.AddressCell\n                                    )}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[0][2]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={clsx(classes.TableCell)}\n                                    align=\"center\"\n                                  >\n                                    <Button\n                                      type=\"submit\"\n                                      variant=\"contained\"\n                                      color=\"primary\"\n                                      onClick={() => handleClick(prod)}\n                                    >\n                                      RECEIVE\n                                    </Button>\n                                  </TableCell>\n                                </TableRow>\n                              </>\n                            );\n                          })\n                      ) : (\n                        <> </>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  rowsPerPageOptions={[10, 25, 100]}\n                  component=\"div\"\n                  count={allReceiveProducts.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </Paper>\n            </div>\n          </>\n        )}\n      </Navbar>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}