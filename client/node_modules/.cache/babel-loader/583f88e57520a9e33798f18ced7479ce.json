{"ast":null,"code":"var _jsxFileName = \"/Users/sumyat/Documents/GitHub/SupplyChain/client/src/admins/AdminRoles.js\";\nimport React from 'react';\nimport ResponsiveDrawer from \"../components/Navigation\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useRole } from \"../context/RoleContext\";\nimport { useStyles } from \"../components/Styles\";\n\nfunction AdminRoles(props) {\n  const accounts = props.accounts;\n  const supplyChainContract = props.supplyChainContract;\n  const {\n    roles,\n    setRoles\n  } = useRole();\n  const classes = useStyles();\n  const [manufacturerRole, setManufacturerAdmin] = React.useState(\"\");\n  const [thirdPartyRole, setThirdPartyAdmin] = React.useState(\"\");\n  const [deliveryRole, setDeliveryAdmin] = React.useState(\"\");\n  const [customerRole, setCustomerAdmin] = React.useState(\"\");\n  const navItem = [];\n\n  const handleAddManufacturerAdmin = async () => {\n    await setAdmins({ ...admins,\n      manufacturer: manufacturerRole\n    });\n    localStorage.setItem(\"mAdmin\", manufacturerAdmin);\n    await supplyChainContract.methods.addManufacturerAdmin(manufacturerAdmin).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setManufacturerAdmin(\"\");\n  };\n\n  const handleAddThirdPartyAdmin = async () => {\n    await setAdmins({ ...admins,\n      thirdparty: thirdPartyAdmin\n    });\n    localStorage.setItem(\"tpAdmin\", thirdPartyAdmin);\n    await supplyChainContract.methods.addThirdPartyAdmin(thirdPartyAdmin).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setThirdPartyAdmin(\"\");\n  };\n\n  const handleAddDeliveryAdmin = async () => {\n    await setAdmins({ ...admins,\n      delivery: deliveryAdmin\n    });\n    localStorage.setItem(\"dAdmin\", deliveryAdmin);\n    await supplyChainContract.methods.addDeliveryAdmin(deliveryAdmin).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setDeliveryAdmin(\"\");\n  };\n\n  const handleAddCustomerAdmin = async () => {\n    await setAdmins({ ...admins,\n      customer: customerAdmin\n    });\n    localStorage.setItem(\"cAdmin\", customerAdmin);\n    await supplyChainContract.methods.addCustomerAdmin(customerAdmin).send({\n      from: accounts[0],\n      gas: 100000\n    }).then(console.log);\n    setCustomerAdmin(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveDrawer, {\n    navItems: navItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.FormWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.pageHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Add Admins\"), console.log(admins), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AdminForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"manufacturerAdmin\",\n    label: \"Enter Manufacturer Ethereum Address\",\n    variant: \"outlined\",\n    value: manufacturerAdmin,\n    onChange: e => setManufacturerAdmin(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddManufacturerAdmin,\n    style: {\n      width: \"20%\",\n      marginLeft: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Save Manufacturer\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AdminForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"thirdPartyAdmin\",\n    label: \"Enter Third Party Ethereum Address \",\n    variant: \"outlined\",\n    value: thirdPartyAdmin,\n    onChange: e => setThirdPartyAdmin(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddThirdPartyAdmin,\n    style: {\n      width: \"20%\",\n      marginLeft: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Save Third Party\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AdminForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"deliveryAdmin\",\n    label: \"Enter Delivery Ethereum Address\",\n    variant: \"outlined\",\n    value: deliveryAdmin,\n    onChange: e => setDeliveryAdmin(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddDeliveryAdmin,\n    style: {\n      width: \"20%\",\n      marginLeft: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Save delivery\"))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AdminForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"customerAdmin\",\n    label: \" Enter Customer Ethereum Address\",\n    variant: \"outlined\",\n    value: customerRole,\n    onChange: e => setCustomerAdmin(e.target.value),\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddCustomerAdmin,\n    style: {\n      width: \"20%\",\n      marginLeft: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Save customer\"))))));\n}\n\nexport default AdminRoles;","map":{"version":3,"sources":["/Users/sumyat/Documents/GitHub/SupplyChain/client/src/admins/AdminRoles.js"],"names":["React","ResponsiveDrawer","TextField","Button","useRole","useStyles","AdminRoles","props","accounts","supplyChainContract","roles","setRoles","classes","manufacturerRole","setManufacturerAdmin","useState","thirdPartyRole","setThirdPartyAdmin","deliveryRole","setDeliveryAdmin","customerRole","setCustomerAdmin","navItem","handleAddManufacturerAdmin","setAdmins","admins","manufacturer","localStorage","setItem","manufacturerAdmin","methods","addManufacturerAdmin","send","from","gas","then","console","log","handleAddThirdPartyAdmin","thirdparty","thirdPartyAdmin","addThirdPartyAdmin","handleAddDeliveryAdmin","delivery","deliveryAdmin","addDeliveryAdmin","handleAddCustomerAdmin","customer","customerAdmin","addCustomerAdmin","FormWrap","pageHeading","root","AdminForm","e","target","value","width","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ResponsiveDrawer from \"../components/Navigation\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useRole } from \"../context/RoleContext\";\nimport { useStyles } from \"../components/Styles\";\n\nfunction AdminRoles(props) {\n  const accounts = props.accounts;\n  const supplyChainContract = props.supplyChainContract;\n  const { roles, setRoles } = useRole();\n\n  const classes = useStyles();\n  const [manufacturerRole, setManufacturerAdmin] = React.useState(\"\");\n  const [thirdPartyRole, setThirdPartyAdmin] = React.useState(\"\");\n  const [deliveryRole, setDeliveryAdmin] = React.useState(\"\");\n  const [customerRole, setCustomerAdmin] = React.useState(\"\");\n  const navItem = [];\n\n  const handleAddManufacturerAdmin = async () => {\n    await setAdmins({\n      ...admins, \n      manufacturer : manufacturerRole\n    })\n\n    localStorage.setItem(\"mAdmin\", manufacturerAdmin);\n    await supplyChainContract.methods.addManufacturerAdmin(manufacturerAdmin).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n    \n\n    setManufacturerAdmin(\"\");\n  }\n  \n  const handleAddThirdPartyAdmin = async () => {\n    await setAdmins({\n      ...admins, \n      thirdparty : thirdPartyAdmin\n    })\n\n    localStorage.setItem(\"tpAdmin\", thirdPartyAdmin);\n    await supplyChainContract.methods.addThirdPartyAdmin(thirdPartyAdmin).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n    \n\n    setThirdPartyAdmin(\"\");\n  }\n\n  const handleAddDeliveryAdmin = async () => {\n    await setAdmins({\n      ...admins, \n      delivery : deliveryAdmin\n  })\n\n   localStorage.setItem(\"dAdmin\", deliveryAdmin);\n    await supplyChainContract.methods.addDeliveryAdmin(deliveryAdmin).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n    \n\n    setDeliveryAdmin(\"\");\n  }\n\n  const handleAddCustomerAdmin = async () => {\n    await setAdmins({\n      ...admins, \n    customer : customerAdmin\n  })\n\n   localStorage.setItem(\"cAdmin\", customerAdmin);\n    await supplyChainContract.methods.addCustomerAdmin(customerAdmin).send({ from: accounts[0], gas:100000 })\n    .then(console.log);\n\n   \n\n    setCustomerAdmin(\"\");\n  }\n\n\n  return (\n    <div>\n      <ResponsiveDrawer navItems={navItem}>\n      <div className={classes.FormWrap}>\n      <h1 className={classes.pageHeading}>Add Admins</h1>\n      {console.log(admins)}\n      \n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.AdminForm} >\n          <TextField\n            id=\"manufacturerAdmin\"\n            label=\"Enter Manufacturer Ethereum Address\"\n            variant=\"outlined\"\n            value={manufacturerAdmin}\n            onChange={(e) => setManufacturerAdmin(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddManufacturerAdmin}\n            style={{width:\"20%\", marginLeft:\"30px\"}}\n          >\n            Save Manufacturer\n          </Button>\n        </div>\n      </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.AdminForm} >\n          <TextField\n            id=\"thirdPartyAdmin\"\n            label=\"Enter Third Party Ethereum Address \"\n            variant=\"outlined\"\n            value={thirdPartyAdmin}\n            onChange={(e) => setThirdPartyAdmin(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddThirdPartyAdmin}\n            style={{width:\"20%\", marginLeft:\"30px\"}}\n          >\n            Save Third Party\n          </Button>\n        </div>\n      </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.AdminForm} >\n          <TextField\n            id=\"deliveryAdmin\"\n            label=\"Enter Delivery Ethereum Address\"\n            variant=\"outlined\"\n            value={deliveryAdmin}\n            onChange={(e) => setDeliveryAdmin(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddDeliveryAdmin}\n            style={{width:\"20%\", marginLeft:\"30px\"}}\n          >\n            Save delivery\n          </Button>\n        </div>\n      </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.AdminForm} >\n          <TextField\n            id=\"customerAdmin\"\n            label=\" Enter Customer Ethereum Address\"\n            variant=\"outlined\"\n            value={customerRole}\n            onChange={(e) => setCustomerAdmin(e.target.value)}\n            style={{width:\"70%\"}}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddCustomerAdmin}\n            style={{width:\"20%\", marginLeft:\"30px\"}}\n          >\n            Save customer\n          </Button>\n        </div>\n      </form>\n      </div>\n      </ResponsiveDrawer>\n    </div>\n  );\n}\n\nexport default AdminRoles;\n"]},"metadata":{},"sourceType":"module"}