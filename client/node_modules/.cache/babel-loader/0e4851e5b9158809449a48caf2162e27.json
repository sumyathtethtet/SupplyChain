{"ast":null,"code":"var _jsxFileName = \"/Users/sumyat/Documents/GitHub/SupplyChain/client/src/pages/Manufacturer/ShipManufacture.js\";\nimport React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { useRole } from \"../../context/RoleDataContext\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useStyles } from \"../../components/Styles\";\nimport ProductModal from \"../../components/Modal\";\nimport clsx from \"clsx\";\nimport Loader from \"../../components/Loader\";\nexport default function ShipManufacture(props) {\n  const supplyChainContract = props.supplyChainContract;\n  const {\n    roles\n  } = useRole();\n  const classes = useStyles();\n  const [count, setCount] = React.useState(0);\n  const [allSoldProducts, setAllSoldProducts] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const navItem = [[\"Add Product\", \"/manufacturer/manufacture\"], [\"Shipping Product\", \"/manufacturer/ship\"], [\"Product Lists\", \"/manufacturer/allManufacture\"]];\n  const [alertText, setalertText] = React.useState(\"\");\n  React.useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const cnt = await supplyChainContract.methods.fetchItemCount().call();\n      setCount(cnt);\n    })();\n\n    (async () => {\n      const arr = [];\n\n      for (var i = 1; i < count; i++) {\n        const prodState = await supplyChainContract.methods.fetchItemState(i).call();\n\n        if (prodState === \"1\") {\n          const prodData = [];\n          const a = await supplyChainContract.methods.fetchItemPart1(i, \"product\", 0).call();\n          const b = await supplyChainContract.methods.fetchItemPart2(i, \"product\", 0).call();\n          const c = await supplyChainContract.methods.fetchItemPart3(i, \"product\", 0).call();\n          prodData.push(a);\n          prodData.push(b);\n          prodData.push(c);\n          arr.push(prodData);\n        }\n      }\n\n      setAllSoldProducts(arr);\n      setLoading(false);\n    })();\n  }, [count]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [modalData, setModalData] = React.useState([]);\n\n  const handleClose = () => setOpen(false);\n\n  const handleClick = async prod => {\n    await setModalData(prod);\n    setOpen(true);\n  };\n\n  const handleSetTxhash = async (id, hash) => {\n    await supplyChainContract.methods.setTransactionHash(id, hash).send({\n      from: roles.manufacturer,\n      gas: 900000\n    });\n  };\n\n  const handleShipButton = async id => {\n    try {\n      await supplyChainContract.methods.shipToThirdParty(id).send({\n        from: roles.manufacturer,\n        gas: 1000000\n      }).on(\"transactionHash\", function (hash) {\n        handleSetTxhash(id, hash);\n      });\n      setCount(0);\n    } catch {\n      setalertText(\"You are not the owner of the Product\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    titlePage: \"Manufacturer\",\n    navItems: navItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductModal, {\n    prod: modalData,\n    open: open,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.pageHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Products To be Shipped\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.tableCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Total : \", allSoldProducts.length), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }\n  }, alertText.length !== 0 ? alertText : \"\")), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.TableRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.TableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Universal ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Product Code\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"Manufacturer\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Manufacture Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.TableHead,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"Product Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: clsx(classes.TableHead, classes.AddressCell),\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: clsx(classes.TableHead),\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Ship\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, allSoldProducts.length !== 0 ? allSoldProducts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(prod => {\n    const d = new Date(parseInt(prod[1][0] * 1000));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: prod[0][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      component: \"th\",\n      align: \"left\",\n      scope: \"row\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 35\n      }\n    }, prod[0][0]), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 35\n      }\n    }, prod[1][2]), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 35\n      }\n    }, prod[0][4]), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 35\n      }\n    }, d.toDateString() + \" \" + d.toTimeString()), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.TableCell,\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 35\n      }\n    }, prod[1][1]), /*#__PURE__*/React.createElement(TableCell, {\n      className: clsx(classes.TableCell, classes.AddressCell),\n      align: \"center\",\n      onClick: () => handleClick(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 35\n      }\n    }, prod[0][2]), /*#__PURE__*/React.createElement(TableCell, {\n      className: clsx(classes.TableCell),\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => handleShipButton(prod[0][0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 37\n      }\n    }, \"SHIP\"))));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \")))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: allSoldProducts.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/sumyat/Documents/GitHub/SupplyChain/client/src/pages/Manufacturer/ShipManufacture.js"],"names":["React","Navbar","Button","useRole","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","useStyles","ProductModal","clsx","Loader","ShipManufacture","props","supplyChainContract","roles","classes","count","setCount","useState","allSoldProducts","setAllSoldProducts","loading","setLoading","navItem","alertText","setalertText","useEffect","cnt","methods","fetchItemCount","call","arr","i","prodState","fetchItemState","prodData","a","fetchItemPart1","b","fetchItemPart2","c","fetchItemPart3","push","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","open","setOpen","modalData","setModalData","handleClose","handleClick","prod","handleSetTxhash","id","hash","setTransactionHash","send","from","manufacturer","gas","handleShipButton","shipToThirdParty","on","pageWrap","pageHeading","tableCount","length","color","TableRoot","AddressCell","slice","map","d","Date","parseInt","toDateString","toTimeString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { useRole } from \"../../context/RoleDataContext\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useStyles } from \"../../components/Styles\";\nimport ProductModal from \"../../components/Modal\";\nimport clsx from \"clsx\";\nimport Loader from \"../../components/Loader\";\n\nexport default function ShipManufacture(props) {\n  const supplyChainContract = props.supplyChainContract;\n  const { roles } = useRole();\n  const classes = useStyles();\n  const [count, setCount] = React.useState(0);\n  const [allSoldProducts, setAllSoldProducts] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const navItem = [\n    [\"Add Product\", \"/manufacturer/manufacture\"],\n    [\"Shipping Product\", \"/manufacturer/ship\"],\n    [\"Product Lists\", \"/manufacturer/allManufacture\"],\n  ];\n  const [alertText, setalertText] = React.useState(\"\");\n  React.useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const cnt = await supplyChainContract.methods.fetchItemCount().call();\n      setCount(cnt);\n      \n    })();\n\n    (async () => {\n      const arr = [];\n      for (var i = 1; i < count; i++) {\n        const prodState = await supplyChainContract.methods\n          .fetchItemState(i)\n          .call();\n\n        if (prodState === \"1\") {\n          const prodData = [];\n          const a = await supplyChainContract.methods\n            .fetchItemPart1(i, \"product\", 0)\n            .call();\n          const b = await supplyChainContract.methods\n            .fetchItemPart2(i, \"product\", 0)\n            .call();\n          const c = await supplyChainContract.methods\n            .fetchItemPart3(i, \"product\", 0)\n            .call();\n          prodData.push(a);\n          prodData.push(b);\n          prodData.push(c);\n          arr.push(prodData);\n        }\n      }\n      setAllSoldProducts(arr);\n      setLoading(false);\n    })();\n  }, [count]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [modalData, setModalData] = React.useState([]);\n\n  const handleClose = () => setOpen(false);\n\n  const handleClick = async (prod) => {\n    await setModalData(prod);\n    setOpen(true);\n  };\n\n  const handleSetTxhash = async (id, hash) => {\n    await supplyChainContract.methods\n      .setTransactionHash(id, hash)\n      .send({ from: roles.manufacturer, gas: 900000 });\n  };\n\n  const handleShipButton = async (id) => {\n    try{\n      await supplyChainContract.methods\n      .shipToThirdParty(id)\n      .send({ from: roles.manufacturer, gas: 1000000 })\n      .on(\"transactionHash\", function (hash) {\n        handleSetTxhash(id, hash);\n      });\n    setCount(0);\n    }catch{\n      setalertText(\"You are not the owner of the Product\");\n    }\n    \n  };\n\n  return (\n    <div className={classes.pageWrap}>\n      <Navbar titlePage={\"Manufacturer\"} navItems={navItem}>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <ProductModal\n              prod={modalData}\n              open={open}\n              handleClose={handleClose}\n            />\n            <h1 className={classes.pageHeading}>Products To be Shipped</h1>\n            <h3 className={classes.tableCount}>\n              Total : {allSoldProducts.length}\n            </h3>\n\n            <div>\n            <p><b style={{ color: \"red\" }}>{alertText.length !== 0 ? alertText : \"\"}</b></p>\n              <Paper className={classes.TableRoot}>\n                <TableContainer className={classes.TableContainer}>\n                  <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.TableHead} align=\"left\">\n                          Universal ID\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Product Code\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Manufacturer\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Manufacture Date\n                        </TableCell>\n                        <TableCell className={classes.TableHead} align=\"center\">\n                          Product Name\n                        </TableCell>\n                        <TableCell\n                          className={clsx(\n                            classes.TableHead,\n                            classes.AddressCell\n                          )}\n                          align=\"center\"\n                        >\n                          Owner\n                        </TableCell>\n                        <TableCell\n                          className={clsx(classes.TableHead)}\n                          align=\"center\"\n                        >\n                          Ship\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {allSoldProducts.length !== 0 ? (\n                        allSoldProducts\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((prod) => {\n                            const d = new Date(parseInt(prod[1][0] * 1000));\n                            return (\n                              <>\n                                <TableRow\n                                  hover\n                                  role=\"checkbox\"\n                                  tabIndex={-1}\n                                  key={prod[0][0]}\n                                >\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    component=\"th\"\n                                    align=\"left\"\n                                    scope=\"row\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[0][0]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[1][2]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[0][4]}\n                                  </TableCell>\n                                  <TableCell\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {d.toDateString() + \" \" + d.toTimeString()}\n                                  </TableCell>\n                                  <TableCell\n                                    className={classes.TableCell}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[1][1]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={clsx(\n                                      classes.TableCell,\n                                      classes.AddressCell\n                                    )}\n                                    align=\"center\"\n                                    onClick={() => handleClick(prod)}\n                                  >\n                                    {prod[0][2]}\n                                  </TableCell>\n                                  <TableCell\n                                    className={clsx(classes.TableCell)}\n                                    align=\"center\"\n                                  >\n                                    <Button\n                                      type=\"submit\"\n                                      variant=\"contained\"\n                                      color=\"primary\"\n                                      onClick={() =>\n                                        handleShipButton(prod[0][0])\n                                      }\n                                    >\n                                      SHIP\n                                    </Button>\n                                  </TableCell>\n                                </TableRow>\n                              </>\n                            );\n                          })\n                      ) : (\n                        <> </>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  rowsPerPageOptions={[10, 25, 100]}\n                  component=\"div\"\n                  count={allSoldProducts.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </Paper>\n            </div>\n          </>\n        )}\n      </Navbar>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}