{"ast":null,"code":"var _jsxFileName = \"/Users/sumyat/Documents/GitHub/SupplyChain/client/src/context/RoleContext.js\";\nimport React from 'react';\nimport { createContext, useState } from \"react\";\nconst RoleContext = createContext(null);\nexport const RoleContextProvider = ({\n  mRole,\n  tpRole,\n  dRole,\n  cRole,\n  children\n}) => {\n  const [roles, setRoles] = useState({\n    manufacturer: mRole,\n    thirdparty: tpRole,\n    delivery: dRole,\n    customer: cRole\n  });\n  return /*#__PURE__*/React.createElement(RoleContext.Provider, {\n    value: {\n      roles,\n      setRoles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useRole = () => React.useContext(RoleContext);","map":{"version":3,"sources":["/Users/sumyat/Documents/GitHub/SupplyChain/client/src/context/RoleContext.js"],"names":["React","createContext","useState","RoleContext","RoleContextProvider","mRole","tpRole","dRole","cRole","children","roles","setRoles","manufacturer","thirdparty","delivery","customer","useRole","useContext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,MAAMC,WAAW,GAAGF,aAAa,CAAC,IAAD,CAAjC;AAEA,OAAO,MAAMG,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAA+C;AAE9E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,YAAY,EAAGP,KADgB;AAE/BQ,IAAAA,UAAU,EAAGP,MAFkB;AAG/BQ,IAAAA,QAAQ,EAAGP,KAHoB;AAI/BQ,IAAAA,QAAQ,EAAGP;AAJoB,GAAD,CAAlC;AAOF,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CAdM;AAgBP,OAAO,MAAMO,OAAO,GAAG,MAAMhB,KAAK,CAACiB,UAAN,CAAiBd,WAAjB,CAAtB","sourcesContent":["import React from 'react';\nimport { createContext, useState } from \"react\";\n\nconst RoleContext = createContext(null);\n\nexport const RoleContextProvider = ({ mRole, tpRole, dRole, cRole, children }) => {\n\n    const [roles, setRoles] = useState({\n        manufacturer : mRole,\n        thirdparty : tpRole,\n        delivery : dRole,\n        customer : cRole\n    });\n\n  return (\n    <RoleContext.Provider value={{ roles, setRoles }}>\n      {children}\n    </RoleContext.Provider>\n  );\n};\n\nexport const useRole = () => React.useContext(RoleContext);\n"]},"metadata":{},"sourceType":"module"}